using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'gradingStudents' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts INTEGER_ARRAY grades as parameter.
     */

    public static List<int> gradingStudents(List<int> grades)
    {
        List<int> finalGrade=new List<int>(grades.Count);
        foreach(int grade in grades){
            if(grade==40){
                finalGrade.Add(40);
            }
            else if(grade<38){
                finalGrade.Add(grade);
                continue;
            }
            else if(grade>=38){
                int nextMultipleOf5 = (grade/5 +1 )*5;
                
                   if(nextMultipleOf5 - grade <3){
                    finalGrade.Add(nextMultipleOf5);
                   }
                   else{
                    finalGrade.Add(grade);
                   }
               
              
                
            }
        }
        
        return finalGrade;

    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int gradesCount = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> grades = new List<int>();
        if(gradesCount>=1 ||gradesCount<=60){
            for (int i = 0; i < gradesCount; i++)
             {
               int gradesItem = Convert.ToInt32(Console.ReadLine().Trim());
               if(gradesItem>=0  ||gradesItem<=60)
                 grades.Add(gradesItem);
            
             }

        List<int> result = Result.gradingStudents(grades);

        textWriter.WriteLine(String.Join("\n", result));

        }
    
        textWriter.Flush();
        textWriter.Close();
    }
}
